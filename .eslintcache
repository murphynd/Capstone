[{"/Users/nataliemurphy/git/Drum/drum-machine/src/index.js":"1","/Users/nataliemurphy/git/Drum/drum-machine/src/App.js":"2","/Users/nataliemurphy/git/Drum/drum-machine/src/reportWebVitals.js":"3","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/Instrument.jsx":"4","/Users/nataliemurphy/git/Drum/drum-machine/src/Engines/Kick.jsx":"5","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/steps.jsx":"6","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/step.jsx":"7","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/TransportControl.jsx":"8","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/pausePlay.jsx":"9","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/InstrumentPannel.jsx":"10","/Users/nataliemurphy/git/Drum/drum-machine/src/Engines/Snare.js":"11"},{"size":500,"mtime":1608573774897,"results":"12","hashOfConfig":"13"},{"size":267,"mtime":1608585265601,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608573774898,"results":"15","hashOfConfig":"13"},{"size":2049,"mtime":1608602668060,"results":"16","hashOfConfig":"13"},{"size":855,"mtime":1608586628880,"results":"17","hashOfConfig":"13"},{"size":502,"mtime":1608601521781,"results":"18","hashOfConfig":"13"},{"size":489,"mtime":1608601633310,"results":"19","hashOfConfig":"13"},{"size":2483,"mtime":1608603976550,"results":"20","hashOfConfig":"13"},{"size":515,"mtime":1608600969235,"results":"21","hashOfConfig":"13"},{"size":995,"mtime":1608603974401,"results":"22","hashOfConfig":"13"},{"size":1798,"mtime":1608603972593,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qmqhio",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/nataliemurphy/git/Drum/drum-machine/src/index.js",[],["53","54"],"/Users/nataliemurphy/git/Drum/drum-machine/src/App.js",[],"/Users/nataliemurphy/git/Drum/drum-machine/src/reportWebVitals.js",[],"/Users/nataliemurphy/git/Drum/drum-machine/src/Components/Instrument.jsx",["55"],"import React from \"react\";\nimport { Kick } from \"../Engines/Kick\";\nimport { Transport, Time } from \"tone\";\nimport { Snare } from \"../Engines/Snare\";\n\nexport class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ctx = new AudioContext();\n    this.sound = new Kick(this.ctx);\n    this.state = {\n      steps: [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n      ],\n    };\n    switch (props.engine) {\n      case \"Kick\":\n        this.sound = new Kick(this.ctx);\n        break;\n      case \"Snare\":\n        this.sound = new Snare(this.ctx);\n        break;\n    }\n  }\n  componentDidUpdate() {\n    if (this.props.steps && !areEqual(this.props.steps, this.state.steps)) {\n      this.setState({\n        steps: this.props.steps.slice(0),\n      });\n      this.createLoop();\n    }\n  }\n  createLoop = () => {\n    if (!this.props.steps) {\n      return;\n    }\n    Transport.clear(this.loopId);\n    const loop = (time) => {\n      this.state.steps.forEach((s, i) => {\n        if (s) {\n          this.sound.trigger(time + i * Time(\"16n\").toSeconds());\n        }\n      });\n    };\n    this.loopId = Transport.schedule(loop, \"0\");\n  };\n\n  handleClick = () => {\n    if (this.props.handleClick)\n      this.props.handleClick(this.props.engine, this.state.steps.slice(0));\n  };\n\n  render() {\n    const InstrumentStyle = {\n      height: \"3em\",\n      margin: \"0.2em\",\n      borderRadius: 10,\n      padding: 5,\n      backgroundColor: \"red\",\n      color: \"white\",\n      boxShadow: \"2px 2px 5px #222\",\n    };\n    return (\n      <div style={InstrumentStyle} onClick={this.handleClick}>\n        <p>{this.props.engine}</p>\n      </div>\n    );\n  }\n}\n\nexport const areEqual = (ar1, ar2) => {\n  if (ar1.length !== ar2.length) return false;\n  let equal = true;\n  ar1.forEach((el, idx) => {\n    if (el !== ar2[idx]) equal = false;\n  });\n  return equal;\n};\n","/Users/nataliemurphy/git/Drum/drum-machine/src/Engines/Kick.jsx",[],"/Users/nataliemurphy/git/Drum/drum-machine/src/Components/steps.jsx",["56"],"import React from \"react\";\nimport { Step } from \"./step\";\n\nexport class Steps extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div style={{ flex: 1, flexDirection: \"row\" }}>\n        {this.props.steps.map((step, idx) => {\n          return (\n            <Step\n              on={step}\n              onClick={this.props.handleStepChange}\n              key={idx}\n              id={idx}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/step.jsx",[],["57","58"],"/Users/nataliemurphy/git/Drum/drum-machine/src/Components/TransportControl.jsx",["59","60"],"import React from \"react\";\nimport { Instrument } from \"./Instrument\";\nimport { Steps } from \"./steps\";\nimport { Transport } from \"tone\";\nimport * as Tone from \"tone\";\nimport { PausePlay } from \"./pausePlay\";\nimport { InstrumentPannel } from \"./InstrumentPannel\";\nimport { Kick } from \"../Engines/Kick\";\nimport { Snare } from \"../Engines/Snare\";\n\nexport class TransportControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      steps: [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n      ],\n      selected: null,\n    };\n    Transport.loop = true;\n    Transport.loopEnd = \"1m\";\n    console.log(this.state);\n  }\n  pause = () => {\n    Transport.stop();\n  };\n  play = () => {\n    Tone.start();\n    Transport.start();\n  };\n\n  handleStepChange = (id) => {\n    const s = this.state.steps;\n    s[id] = !s[id];\n    this.setState({\n      steps: s,\n    });\n  };\n  selectInstrument = (selected, steps) => {\n    if (this.state.selected === selected) {\n      this.setState({\n        selected: null,\n        steps: [\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n        ],\n      });\n    } else {\n      this.setState({ selected, steps });\n    }\n  };\n\n  render() {\n    console.log(\"engine \", this.state.engine);\n    console.log(\"setps\", this.state.steps);\n    console.log(\"KickSteps\", this.state.selectedInstrument);\n\n    return (\n      <div>\n        <h1 style={{ color: \"black\" }}>ThumP</h1>\n        <PausePlay play={this.play} pause={this.pause} />\n        <InstrumentPannel\n          steps={this.state.steps}\n          selectedInstrument={this.state.selected}\n        >\n          <Instrument\n            key=\"Kick\"\n            engine=\"Kick\"\n            handleClick={this.selectInstrument}\n          />\n          <Instrument\n            key=\"Snare\"\n            engine=\"Snare\"\n            handleClick={this.selectInstrument}\n          />\n        </InstrumentPannel>\n        <Steps\n          handleStepChange={this.handleStepChange}\n          steps={this.state.steps}\n        />\n      </div>\n    );\n  }\n}\nexport default TransportControl;\n","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/pausePlay.jsx",["61"],"import React from \"react\";\nimport * as Tone from \"tone\";\nexport class PausePlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { playing: false };\n  }\n  handleClick = () => {\n    if (this.state.playing) {\n      this.props.pause();\n    } else {\n      this.props.play();\n    }\n    this.setState({ playing: !this.state.playing });\n  };\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.playing ? \"Pause\" : \"Play\"}\n      </button>\n    );\n  }\n}\n","/Users/nataliemurphy/git/Drum/drum-machine/src/Components/InstrumentPannel.jsx",["62"],"import React from \"react\";\n\nexport class InstrumentPannel extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(\"the selected is\", this.props.selectedInstrument);\n    const childrenWithProps = React.Children.map(\n      this.props.children,\n      (child) => {\n        if (\n          typeof child === \"object\" &&\n          child !== null &&\n          child.hasOwnProperty(\"key\")\n        ) {\n          if (child.key === this.props.selectedInstrument) {\n            return React.cloneElement(child, {\n              steps: this.props.steps,\n              selected: true,\n            });\n          } else {\n            return React.cloneElement(child, { steps: null, selected: false });\n          }\n        }\n        return child;\n      }\n    );\n\n    return (\n      <div\n        style={{\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {childrenWithProps}\n      </div>\n    );\n  }\n}\n","/Users/nataliemurphy/git/Drum/drum-machine/src/Engines/Snare.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":31,"column":5,"nodeType":"69","messageId":"70","endLine":38,"endColumn":6},{"ruleId":"71","severity":1,"message":"72","line":5,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":4},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":15},{"ruleId":"77","severity":1,"message":"82","line":2,"column":13,"nodeType":"79","messageId":"80","endLine":2,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":4,"column":3,"nodeType":"73","messageId":"74","endLine":6,"endColumn":4},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["83"],["84"],"no-unused-vars","'Kick' is defined but never used.","Identifier","unusedVar","'Snare' is defined but never used.","'Tone' is defined but never used.","no-global-assign","no-unsafe-negation"]